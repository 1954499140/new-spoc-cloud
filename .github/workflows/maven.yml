name: Java CI with Maven and Docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: 检出代码
    - uses: actions/checkout@v4

    # Step 2: 设置 JDK 17 环境
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # Step 3: 打包每个微服务
    - name: Build and Package Service 1
      run: mvn -B package --file api-gateway/pom.xml -DskipTests

    - name: Build and Package Service 2
      run: mvn -B package --file course-service/pom.xml -DskipTests

    - name: Build and Package Service 3
      run: mvn -B package --file user-course-service/pom.xml -DskipTests
    - name: Build and Package Service 3
      run: mvn -B package --file user-service/pom.xml -DskipTests

    # Step 4: 登录 Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 5: 构建并推送 Docker 镜像
    - name: Build and Push Docker images
      run: |
        # 处理 Service 1
        cd api-gateway
        docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest

        # 处理 Service 2
        cd ../course-service
        docker build -t ${{ secrets.DOCKER_USERNAME }}/course-service:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/course-service:latest

        # 处理 Service 3
        cd ../user-course-service
        docker build -t ${{ secrets.DOCKER_USERNAME }}/user-course-service:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/user-course-service:latest
